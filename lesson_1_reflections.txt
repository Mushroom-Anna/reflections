1、查看文件的两个版本之间的差异如何帮助你了解引入的错误？
根据查看原代码正确的部分是否被意外修改。

2、从长远来看，能轻松访问文件的整个历史记录将如何提高编程者的效率？
可以方便查错，可以查看添加或修改某个功能时所需要修改的代码部分。

3、你认为，手动选择何时创建提交（像在 Git 中做的那样）与自动保存版本（如 Google Docs 所做的那样）各有何优缺点？
手动提交需要使用者有很好的提交习惯，而自动提交则不用。
但是手动提交包含了每项修改的逻辑，自动提交没有修改的逻辑

4、何你认为一些版本控制系统（例如 Git）允许在一次提交中保存多个文件，而其他系统（例如 Google Docs）单独对待每个文件？
一次提交可以保存多个文件使相互关联的文件的版本控制能更好得被管理。

5、如何使用命令 git log 和 git diff 来查看文件的历史记录？
git log 查看每次修改记录，获得相应的commit id
git diff + 两个commit id 可以详细分析两次commit中的改变

6、使用版本控制，如何让你更有信心进行有可能会造成破坏的更改？
由于可以随时返回历史保存的commit，即使出错也能恢复。

7.现在你已设置了工作空间，你想尝试使用 Git 来做些什么？
来应用于android的历史记录保存，以便做出新的不确定的改动。